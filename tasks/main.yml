# tasks file
---
- name: install  # noqa args[module]
  ansible.builtin.apt:
    name: "{{ nano_dependencies }}"
    state: "{{ apt_install_state | default('latest') }}"
    update_cache: true
    cache_valid_time: "{{ apt_update_cache_valid_time | default(3600) }}"
  tags:
    - configuration
    - nano
    - nano-install

- name: get (current) version  # noqa risky-shell-pipe
  ansible.builtin.shell: >
    nano --version 2>&1 | head -1 | awk '{print $NF}'
  register: _get_current_version
  changed_when: false
  check_mode: false
  failed_when: "_get_current_version.rc != 0"
  tags:
    - configuration
    - nano
    - nano-version
    - nano-version-get

- name: set (current) version
  ansible.builtin.set_fact:
    nano_version: "{{ _get_current_version.stdout | regex_search('^([0-9]+\\.[0-9]+\\.?[0-9]*)$') }}"
  changed_when: false
  check_mode: false
  tags:
    - configuration
    - nano
    - nano-version
    - nano-version-set

- name: install improved nanorc
  ansible.builtin.import_tasks: install-improved-nanorc.yml
  when: nano_improved_nanorc_install | bool
  tags:
    - configuration
    - nano
    - nano-improved-nanorc

- name: create configuration file
  ansible.builtin.template:
    src: etc/nanorc.j2
    dest: "{{ item.value.dest }}/.nanorc"
    owner: "{{ item.value.owner | default('root') }}"
    group: "{{ item.value.group | default(item.value.owner) | default('root') }}"
    mode: "{{ item.value.mode | default('0644') }}"
  with_dict: "{{ nano_nanorc_destinations }}"
  tags:
    - configuration
    - nano
    - nano-configuration
